// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protobuf_mqttmanager.proto
// Protobuf C++ Version: 5.27.0

#include "protobuf_mqttmanager.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr MQTTManagerSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : date_format_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        outside_temp_sensor_provider_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        outside_temp_sensor_entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        weather_location_latitude_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        weather_location_longitude_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        manager_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        color_temp_min_{0u},
        color_temp_max_{0u},
        weather_wind_speed_format_{static_cast< ::wind_speed_format >(0)},
        weather_precipitation_unit_{static_cast< ::precipitation_format >(0)},
        weather_update_interval_minutes_{0},
        clock_format_{static_cast< ::time_format >(0)},
        temperature_unit_{static_cast< ::temperature_format >(0)},
        max_log_buffer_size_{0},
        manager_port_{0},
        light_turn_on_behavior_{static_cast< ::MQTTManagerSettings_turn_on_behavior >(0)},
        is_home_assistant_addon_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MQTTManagerSettings::MQTTManagerSettings(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MQTTManagerSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MQTTManagerSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MQTTManagerSettingsDefaultTypeInternal() {}
  union {
    MQTTManagerSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MQTTManagerSettingsDefaultTypeInternal _MQTTManagerSettings_default_instance_;

inline constexpr MQTTManagerPrivateSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : home_assistant_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        home_assistant_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        openhab_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        openhab_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mqtt_server_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mqtt_username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mqtt_password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mqtt_server_port_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MQTTManagerPrivateSettings::MQTTManagerPrivateSettings(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MQTTManagerPrivateSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MQTTManagerPrivateSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MQTTManagerPrivateSettingsDefaultTypeInternal() {}
  union {
    MQTTManagerPrivateSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MQTTManagerPrivateSettingsDefaultTypeInternal _MQTTManagerPrivateSettings_default_instance_;

inline constexpr MultipleNSPanelsSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : nspanels_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MultipleNSPanelsSettings::MultipleNSPanelsSettings(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MultipleNSPanelsSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MultipleNSPanelsSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MultipleNSPanelsSettingsDefaultTypeInternal() {}
  union {
    MultipleNSPanelsSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MultipleNSPanelsSettingsDefaultTypeInternal _MultipleNSPanelsSettings_default_instance_;
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_protobuf_5fmqttmanager_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protobuf_5fmqttmanager_2eproto = nullptr;
const ::uint32_t
    TableStruct_protobuf_5fmqttmanager_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MQTTManagerPrivateSettings, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MQTTManagerPrivateSettings, _impl_.home_assistant_address_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerPrivateSettings, _impl_.home_assistant_token_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerPrivateSettings, _impl_.openhab_address_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerPrivateSettings, _impl_.openhab_token_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerPrivateSettings, _impl_.mqtt_server_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerPrivateSettings, _impl_.mqtt_server_port_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerPrivateSettings, _impl_.mqtt_username_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerPrivateSettings, _impl_.mqtt_password_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MQTTManagerSettings, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MQTTManagerSettings, _impl_.color_temp_min_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerSettings, _impl_.color_temp_max_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerSettings, _impl_.date_format_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerSettings, _impl_.outside_temp_sensor_provider_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerSettings, _impl_.outside_temp_sensor_entity_id_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerSettings, _impl_.weather_location_latitude_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerSettings, _impl_.weather_location_longitude_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerSettings, _impl_.weather_wind_speed_format_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerSettings, _impl_.weather_precipitation_unit_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerSettings, _impl_.weather_update_interval_minutes_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerSettings, _impl_.clock_format_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerSettings, _impl_.temperature_unit_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerSettings, _impl_.max_log_buffer_size_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerSettings, _impl_.manager_port_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerSettings, _impl_.manager_address_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerSettings, _impl_.light_turn_on_behavior_),
        PROTOBUF_FIELD_OFFSET(::MQTTManagerSettings, _impl_.is_home_assistant_addon_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MultipleNSPanelsSettings, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MultipleNSPanelsSettings, _impl_.nspanels_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::MQTTManagerPrivateSettings)},
        {16, -1, -1, sizeof(::MQTTManagerSettings)},
        {41, -1, -1, sizeof(::MultipleNSPanelsSettings)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_MQTTManagerPrivateSettings_default_instance_._instance,
    &::_MQTTManagerSettings_default_instance_._instance,
    &::_MultipleNSPanelsSettings_default_instance_._instance,
};
const char descriptor_table_protodef_protobuf_5fmqttmanager_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\032protobuf_mqttmanager.proto\032\026protobuf_g"
    "eneral.proto\032\026protobuf_formats.proto\"\347\001\n"
    "\032MQTTManagerPrivateSettings\022\036\n\026home_assi"
    "stant_address\030\001 \001(\t\022\034\n\024home_assistant_to"
    "ken\030\002 \001(\t\022\027\n\017openhab_address\030\003 \001(\t\022\025\n\rop"
    "enhab_token\030\004 \001(\t\022\023\n\013mqtt_server\030\005 \001(\t\022\030"
    "\n\020mqtt_server_port\030\006 \001(\005\022\025\n\rmqtt_usernam"
    "e\030\007 \001(\t\022\025\n\rmqtt_password\030\010 \001(\t\"\310\005\n\023MQTTM"
    "anagerSettings\022\026\n\016color_temp_min\030\001 \001(\r\022\026"
    "\n\016color_temp_max\030\002 \001(\r\022\023\n\013date_format\030\003 "
    "\001(\t\022$\n\034outside_temp_sensor_provider\030\004 \001("
    "\t\022%\n\035outside_temp_sensor_entity_id\030\005 \001(\t"
    "\022!\n\031weather_location_latitude\030\006 \001(\t\022\"\n\032w"
    "eather_location_longitude\030\007 \001(\t\0225\n\031weath"
    "er_wind_speed_format\030\010 \001(\0162\022.wind_speed_"
    "format\0229\n\032weather_precipitation_unit\030\t \001"
    "(\0162\025.precipitation_format\022\'\n\037weather_upd"
    "ate_interval_minutes\030\n \001(\005\022\"\n\014clock_form"
    "at\030\013 \001(\0162\014.time_format\022-\n\020temperature_un"
    "it\030\014 \001(\0162\023.temperature_format\022\033\n\023max_log"
    "_buffer_size\030\r \001(\005\022\024\n\014manager_port\030\016 \001(\005"
    "\022\027\n\017manager_address\030\017 \001(\t\022E\n\026light_turn_"
    "on_behavior\030\020 \001(\0162%.MQTTManagerSettings."
    "turn_on_behavior\022\037\n\027is_home_assistant_ad"
    "don\030\021 \001(\010\"6\n\020turn_on_behavior\022\025\n\021color_t"
    "emperature\020\000\022\013\n\007restore\020\001\">\n\030MultipleNSP"
    "anelsSettings\022\"\n\010nspanels\030\001 \003(\0132\020.NSPane"
    "lSettingsb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_protobuf_5fmqttmanager_2eproto_deps[2] =
    {
        &::descriptor_table_protobuf_5fformats_2eproto,
        &::descriptor_table_protobuf_5fgeneral_2eproto,
};
static ::absl::once_flag descriptor_table_protobuf_5fmqttmanager_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_protobuf_5fmqttmanager_2eproto = {
    false,
    false,
    1097,
    descriptor_table_protodef_protobuf_5fmqttmanager_2eproto,
    "protobuf_mqttmanager.proto",
    &descriptor_table_protobuf_5fmqttmanager_2eproto_once,
    descriptor_table_protobuf_5fmqttmanager_2eproto_deps,
    2,
    3,
    schemas,
    file_default_instances,
    TableStruct_protobuf_5fmqttmanager_2eproto::offsets,
    file_level_enum_descriptors_protobuf_5fmqttmanager_2eproto,
    file_level_service_descriptors_protobuf_5fmqttmanager_2eproto,
};
const ::google::protobuf::EnumDescriptor* MQTTManagerSettings_turn_on_behavior_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protobuf_5fmqttmanager_2eproto);
  return file_level_enum_descriptors_protobuf_5fmqttmanager_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MQTTManagerSettings_turn_on_behavior_internal_data_[] = {
    131072u, 0u, };
bool MQTTManagerSettings_turn_on_behavior_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr MQTTManagerSettings_turn_on_behavior MQTTManagerSettings::color_temperature;
constexpr MQTTManagerSettings_turn_on_behavior MQTTManagerSettings::restore;
constexpr MQTTManagerSettings_turn_on_behavior MQTTManagerSettings::turn_on_behavior_MIN;
constexpr MQTTManagerSettings_turn_on_behavior MQTTManagerSettings::turn_on_behavior_MAX;
constexpr int MQTTManagerSettings::turn_on_behavior_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class MQTTManagerPrivateSettings::_Internal {
 public:
};

MQTTManagerPrivateSettings::MQTTManagerPrivateSettings(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MQTTManagerPrivateSettings)
}
inline PROTOBUF_NDEBUG_INLINE MQTTManagerPrivateSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MQTTManagerPrivateSettings& from_msg)
      : home_assistant_address_(arena, from.home_assistant_address_),
        home_assistant_token_(arena, from.home_assistant_token_),
        openhab_address_(arena, from.openhab_address_),
        openhab_token_(arena, from.openhab_token_),
        mqtt_server_(arena, from.mqtt_server_),
        mqtt_username_(arena, from.mqtt_username_),
        mqtt_password_(arena, from.mqtt_password_),
        _cached_size_{0} {}

MQTTManagerPrivateSettings::MQTTManagerPrivateSettings(
    ::google::protobuf::Arena* arena,
    const MQTTManagerPrivateSettings& from)
    : ::google::protobuf::Message(arena) {
  MQTTManagerPrivateSettings* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.mqtt_server_port_ = from._impl_.mqtt_server_port_;

  // @@protoc_insertion_point(copy_constructor:MQTTManagerPrivateSettings)
}
inline PROTOBUF_NDEBUG_INLINE MQTTManagerPrivateSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : home_assistant_address_(arena),
        home_assistant_token_(arena),
        openhab_address_(arena),
        openhab_token_(arena),
        mqtt_server_(arena),
        mqtt_username_(arena),
        mqtt_password_(arena),
        _cached_size_{0} {}

inline void MQTTManagerPrivateSettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mqtt_server_port_ = {};
}
MQTTManagerPrivateSettings::~MQTTManagerPrivateSettings() {
  // @@protoc_insertion_point(destructor:MQTTManagerPrivateSettings)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MQTTManagerPrivateSettings::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.home_assistant_address_.Destroy();
  _impl_.home_assistant_token_.Destroy();
  _impl_.openhab_address_.Destroy();
  _impl_.openhab_token_.Destroy();
  _impl_.mqtt_server_.Destroy();
  _impl_.mqtt_username_.Destroy();
  _impl_.mqtt_password_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
MQTTManagerPrivateSettings::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(MQTTManagerPrivateSettings, _impl_._cached_size_),
              false,
          },
          &MQTTManagerPrivateSettings::MergeImpl,
          &MQTTManagerPrivateSettings::kDescriptorMethods,
          &descriptor_table_protobuf_5fmqttmanager_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 150, 2> MQTTManagerPrivateSettings::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MQTTManagerPrivateSettings_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MQTTManagerPrivateSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string mqtt_password = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerPrivateSettings, _impl_.mqtt_password_)}},
    // string home_assistant_address = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerPrivateSettings, _impl_.home_assistant_address_)}},
    // string home_assistant_token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerPrivateSettings, _impl_.home_assistant_token_)}},
    // string openhab_address = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerPrivateSettings, _impl_.openhab_address_)}},
    // string openhab_token = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerPrivateSettings, _impl_.openhab_token_)}},
    // string mqtt_server = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerPrivateSettings, _impl_.mqtt_server_)}},
    // int32 mqtt_server_port = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MQTTManagerPrivateSettings, _impl_.mqtt_server_port_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerPrivateSettings, _impl_.mqtt_server_port_)}},
    // string mqtt_username = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerPrivateSettings, _impl_.mqtt_username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string home_assistant_address = 1;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerPrivateSettings, _impl_.home_assistant_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string home_assistant_token = 2;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerPrivateSettings, _impl_.home_assistant_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string openhab_address = 3;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerPrivateSettings, _impl_.openhab_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string openhab_token = 4;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerPrivateSettings, _impl_.openhab_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string mqtt_server = 5;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerPrivateSettings, _impl_.mqtt_server_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 mqtt_server_port = 6;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerPrivateSettings, _impl_.mqtt_server_port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string mqtt_username = 7;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerPrivateSettings, _impl_.mqtt_username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string mqtt_password = 8;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerPrivateSettings, _impl_.mqtt_password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\26\24\17\15\13\0\15\15\0\0\0\0\0\0\0"
    "MQTTManagerPrivateSettings"
    "home_assistant_address"
    "home_assistant_token"
    "openhab_address"
    "openhab_token"
    "mqtt_server"
    "mqtt_username"
    "mqtt_password"
  }},
};

PROTOBUF_NOINLINE void MQTTManagerPrivateSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:MQTTManagerPrivateSettings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.home_assistant_address_.ClearToEmpty();
  _impl_.home_assistant_token_.ClearToEmpty();
  _impl_.openhab_address_.ClearToEmpty();
  _impl_.openhab_token_.ClearToEmpty();
  _impl_.mqtt_server_.ClearToEmpty();
  _impl_.mqtt_username_.ClearToEmpty();
  _impl_.mqtt_password_.ClearToEmpty();
  _impl_.mqtt_server_port_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* MQTTManagerPrivateSettings::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MQTTManagerPrivateSettings)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string home_assistant_address = 1;
  if (!this->_internal_home_assistant_address().empty()) {
    const std::string& _s = this->_internal_home_assistant_address();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MQTTManagerPrivateSettings.home_assistant_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string home_assistant_token = 2;
  if (!this->_internal_home_assistant_token().empty()) {
    const std::string& _s = this->_internal_home_assistant_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MQTTManagerPrivateSettings.home_assistant_token");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string openhab_address = 3;
  if (!this->_internal_openhab_address().empty()) {
    const std::string& _s = this->_internal_openhab_address();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MQTTManagerPrivateSettings.openhab_address");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string openhab_token = 4;
  if (!this->_internal_openhab_token().empty()) {
    const std::string& _s = this->_internal_openhab_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MQTTManagerPrivateSettings.openhab_token");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string mqtt_server = 5;
  if (!this->_internal_mqtt_server().empty()) {
    const std::string& _s = this->_internal_mqtt_server();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MQTTManagerPrivateSettings.mqtt_server");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // int32 mqtt_server_port = 6;
  if (this->_internal_mqtt_server_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_mqtt_server_port(), target);
  }

  // string mqtt_username = 7;
  if (!this->_internal_mqtt_username().empty()) {
    const std::string& _s = this->_internal_mqtt_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MQTTManagerPrivateSettings.mqtt_username");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // string mqtt_password = 8;
  if (!this->_internal_mqtt_password().empty()) {
    const std::string& _s = this->_internal_mqtt_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MQTTManagerPrivateSettings.mqtt_password");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MQTTManagerPrivateSettings)
  return target;
}

::size_t MQTTManagerPrivateSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MQTTManagerPrivateSettings)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string home_assistant_address = 1;
  if (!this->_internal_home_assistant_address().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_home_assistant_address());
  }

  // string home_assistant_token = 2;
  if (!this->_internal_home_assistant_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_home_assistant_token());
  }

  // string openhab_address = 3;
  if (!this->_internal_openhab_address().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_openhab_address());
  }

  // string openhab_token = 4;
  if (!this->_internal_openhab_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_openhab_token());
  }

  // string mqtt_server = 5;
  if (!this->_internal_mqtt_server().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_mqtt_server());
  }

  // string mqtt_username = 7;
  if (!this->_internal_mqtt_username().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_mqtt_username());
  }

  // string mqtt_password = 8;
  if (!this->_internal_mqtt_password().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_mqtt_password());
  }

  // int32 mqtt_server_port = 6;
  if (this->_internal_mqtt_server_port() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_mqtt_server_port());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void MQTTManagerPrivateSettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MQTTManagerPrivateSettings*>(&to_msg);
  auto& from = static_cast<const MQTTManagerPrivateSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MQTTManagerPrivateSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_home_assistant_address().empty()) {
    _this->_internal_set_home_assistant_address(from._internal_home_assistant_address());
  }
  if (!from._internal_home_assistant_token().empty()) {
    _this->_internal_set_home_assistant_token(from._internal_home_assistant_token());
  }
  if (!from._internal_openhab_address().empty()) {
    _this->_internal_set_openhab_address(from._internal_openhab_address());
  }
  if (!from._internal_openhab_token().empty()) {
    _this->_internal_set_openhab_token(from._internal_openhab_token());
  }
  if (!from._internal_mqtt_server().empty()) {
    _this->_internal_set_mqtt_server(from._internal_mqtt_server());
  }
  if (!from._internal_mqtt_username().empty()) {
    _this->_internal_set_mqtt_username(from._internal_mqtt_username());
  }
  if (!from._internal_mqtt_password().empty()) {
    _this->_internal_set_mqtt_password(from._internal_mqtt_password());
  }
  if (from._internal_mqtt_server_port() != 0) {
    _this->_impl_.mqtt_server_port_ = from._impl_.mqtt_server_port_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MQTTManagerPrivateSettings::CopyFrom(const MQTTManagerPrivateSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MQTTManagerPrivateSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MQTTManagerPrivateSettings::InternalSwap(MQTTManagerPrivateSettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.home_assistant_address_, &other->_impl_.home_assistant_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.home_assistant_token_, &other->_impl_.home_assistant_token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.openhab_address_, &other->_impl_.openhab_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.openhab_token_, &other->_impl_.openhab_token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mqtt_server_, &other->_impl_.mqtt_server_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mqtt_username_, &other->_impl_.mqtt_username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mqtt_password_, &other->_impl_.mqtt_password_, arena);
        swap(_impl_.mqtt_server_port_, other->_impl_.mqtt_server_port_);
}

::google::protobuf::Metadata MQTTManagerPrivateSettings::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MQTTManagerSettings::_Internal {
 public:
};

MQTTManagerSettings::MQTTManagerSettings(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MQTTManagerSettings)
}
inline PROTOBUF_NDEBUG_INLINE MQTTManagerSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MQTTManagerSettings& from_msg)
      : date_format_(arena, from.date_format_),
        outside_temp_sensor_provider_(arena, from.outside_temp_sensor_provider_),
        outside_temp_sensor_entity_id_(arena, from.outside_temp_sensor_entity_id_),
        weather_location_latitude_(arena, from.weather_location_latitude_),
        weather_location_longitude_(arena, from.weather_location_longitude_),
        manager_address_(arena, from.manager_address_),
        _cached_size_{0} {}

MQTTManagerSettings::MQTTManagerSettings(
    ::google::protobuf::Arena* arena,
    const MQTTManagerSettings& from)
    : ::google::protobuf::Message(arena) {
  MQTTManagerSettings* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, color_temp_min_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, color_temp_min_),
           offsetof(Impl_, is_home_assistant_addon_) -
               offsetof(Impl_, color_temp_min_) +
               sizeof(Impl_::is_home_assistant_addon_));

  // @@protoc_insertion_point(copy_constructor:MQTTManagerSettings)
}
inline PROTOBUF_NDEBUG_INLINE MQTTManagerSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : date_format_(arena),
        outside_temp_sensor_provider_(arena),
        outside_temp_sensor_entity_id_(arena),
        weather_location_latitude_(arena),
        weather_location_longitude_(arena),
        manager_address_(arena),
        _cached_size_{0} {}

inline void MQTTManagerSettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, color_temp_min_),
           0,
           offsetof(Impl_, is_home_assistant_addon_) -
               offsetof(Impl_, color_temp_min_) +
               sizeof(Impl_::is_home_assistant_addon_));
}
MQTTManagerSettings::~MQTTManagerSettings() {
  // @@protoc_insertion_point(destructor:MQTTManagerSettings)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MQTTManagerSettings::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.date_format_.Destroy();
  _impl_.outside_temp_sensor_provider_.Destroy();
  _impl_.outside_temp_sensor_entity_id_.Destroy();
  _impl_.weather_location_latitude_.Destroy();
  _impl_.weather_location_longitude_.Destroy();
  _impl_.manager_address_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
MQTTManagerSettings::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_._cached_size_),
              false,
          },
          &MQTTManagerSettings::MergeImpl,
          &MQTTManagerSettings::kDescriptorMethods,
          &descriptor_table_protobuf_5fmqttmanager_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 17, 0, 178, 2> MQTTManagerSettings::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    17, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294836224,  // skipmap
    offsetof(decltype(_table_), field_entries),
    17,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MQTTManagerSettings_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MQTTManagerSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 color_temp_min = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MQTTManagerSettings, _impl_.color_temp_min_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.color_temp_min_)}},
    // uint32 color_temp_max = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MQTTManagerSettings, _impl_.color_temp_max_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.color_temp_max_)}},
    // string date_format = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.date_format_)}},
    // string outside_temp_sensor_provider = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.outside_temp_sensor_provider_)}},
    // string outside_temp_sensor_entity_id = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.outside_temp_sensor_entity_id_)}},
    // string weather_location_latitude = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.weather_location_latitude_)}},
    // string weather_location_longitude = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.weather_location_longitude_)}},
    // .wind_speed_format weather_wind_speed_format = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MQTTManagerSettings, _impl_.weather_wind_speed_format_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.weather_wind_speed_format_)}},
    // .precipitation_format weather_precipitation_unit = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MQTTManagerSettings, _impl_.weather_precipitation_unit_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.weather_precipitation_unit_)}},
    // int32 weather_update_interval_minutes = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MQTTManagerSettings, _impl_.weather_update_interval_minutes_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.weather_update_interval_minutes_)}},
    // .time_format clock_format = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MQTTManagerSettings, _impl_.clock_format_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.clock_format_)}},
    // .temperature_format temperature_unit = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MQTTManagerSettings, _impl_.temperature_unit_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.temperature_unit_)}},
    // int32 max_log_buffer_size = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MQTTManagerSettings, _impl_.max_log_buffer_size_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.max_log_buffer_size_)}},
    // int32 manager_port = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MQTTManagerSettings, _impl_.manager_port_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.manager_port_)}},
    // string manager_address = 15;
    {::_pbi::TcParser::FastUS1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.manager_address_)}},
    // .MQTTManagerSettings.turn_on_behavior light_turn_on_behavior = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.light_turn_on_behavior_)}},
    // bool is_home_assistant_addon = 17;
    {::_pbi::TcParser::FastV8S2,
     {392, 63, 0, PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.is_home_assistant_addon_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 color_temp_min = 1;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.color_temp_min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 color_temp_max = 2;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.color_temp_max_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string date_format = 3;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.date_format_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string outside_temp_sensor_provider = 4;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.outside_temp_sensor_provider_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string outside_temp_sensor_entity_id = 5;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.outside_temp_sensor_entity_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string weather_location_latitude = 6;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.weather_location_latitude_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string weather_location_longitude = 7;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.weather_location_longitude_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .wind_speed_format weather_wind_speed_format = 8;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.weather_wind_speed_format_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .precipitation_format weather_precipitation_unit = 9;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.weather_precipitation_unit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 weather_update_interval_minutes = 10;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.weather_update_interval_minutes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .time_format clock_format = 11;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.clock_format_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .temperature_format temperature_unit = 12;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.temperature_unit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 max_log_buffer_size = 13;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.max_log_buffer_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 manager_port = 14;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.manager_port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string manager_address = 15;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.manager_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .MQTTManagerSettings.turn_on_behavior light_turn_on_behavior = 16;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.light_turn_on_behavior_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool is_home_assistant_addon = 17;
    {PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.is_home_assistant_addon_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\23\0\0\13\34\35\31\32\0\0\0\0\0\0\0\17\0\0\0\0\0\0\0\0"
    "MQTTManagerSettings"
    "date_format"
    "outside_temp_sensor_provider"
    "outside_temp_sensor_entity_id"
    "weather_location_latitude"
    "weather_location_longitude"
    "manager_address"
  }},
};

PROTOBUF_NOINLINE void MQTTManagerSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:MQTTManagerSettings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.date_format_.ClearToEmpty();
  _impl_.outside_temp_sensor_provider_.ClearToEmpty();
  _impl_.outside_temp_sensor_entity_id_.ClearToEmpty();
  _impl_.weather_location_latitude_.ClearToEmpty();
  _impl_.weather_location_longitude_.ClearToEmpty();
  _impl_.manager_address_.ClearToEmpty();
  ::memset(&_impl_.color_temp_min_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_home_assistant_addon_) -
      reinterpret_cast<char*>(&_impl_.color_temp_min_)) + sizeof(_impl_.is_home_assistant_addon_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* MQTTManagerSettings::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MQTTManagerSettings)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 color_temp_min = 1;
  if (this->_internal_color_temp_min() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_color_temp_min(), target);
  }

  // uint32 color_temp_max = 2;
  if (this->_internal_color_temp_max() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_color_temp_max(), target);
  }

  // string date_format = 3;
  if (!this->_internal_date_format().empty()) {
    const std::string& _s = this->_internal_date_format();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MQTTManagerSettings.date_format");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string outside_temp_sensor_provider = 4;
  if (!this->_internal_outside_temp_sensor_provider().empty()) {
    const std::string& _s = this->_internal_outside_temp_sensor_provider();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MQTTManagerSettings.outside_temp_sensor_provider");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string outside_temp_sensor_entity_id = 5;
  if (!this->_internal_outside_temp_sensor_entity_id().empty()) {
    const std::string& _s = this->_internal_outside_temp_sensor_entity_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MQTTManagerSettings.outside_temp_sensor_entity_id");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string weather_location_latitude = 6;
  if (!this->_internal_weather_location_latitude().empty()) {
    const std::string& _s = this->_internal_weather_location_latitude();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MQTTManagerSettings.weather_location_latitude");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string weather_location_longitude = 7;
  if (!this->_internal_weather_location_longitude().empty()) {
    const std::string& _s = this->_internal_weather_location_longitude();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MQTTManagerSettings.weather_location_longitude");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // .wind_speed_format weather_wind_speed_format = 8;
  if (this->_internal_weather_wind_speed_format() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        8, this->_internal_weather_wind_speed_format(), target);
  }

  // .precipitation_format weather_precipitation_unit = 9;
  if (this->_internal_weather_precipitation_unit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        9, this->_internal_weather_precipitation_unit(), target);
  }

  // int32 weather_update_interval_minutes = 10;
  if (this->_internal_weather_update_interval_minutes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<10>(
            stream, this->_internal_weather_update_interval_minutes(), target);
  }

  // .time_format clock_format = 11;
  if (this->_internal_clock_format() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        11, this->_internal_clock_format(), target);
  }

  // .temperature_format temperature_unit = 12;
  if (this->_internal_temperature_unit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        12, this->_internal_temperature_unit(), target);
  }

  // int32 max_log_buffer_size = 13;
  if (this->_internal_max_log_buffer_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<13>(
            stream, this->_internal_max_log_buffer_size(), target);
  }

  // int32 manager_port = 14;
  if (this->_internal_manager_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<14>(
            stream, this->_internal_manager_port(), target);
  }

  // string manager_address = 15;
  if (!this->_internal_manager_address().empty()) {
    const std::string& _s = this->_internal_manager_address();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MQTTManagerSettings.manager_address");
    target = stream->WriteStringMaybeAliased(15, _s, target);
  }

  // .MQTTManagerSettings.turn_on_behavior light_turn_on_behavior = 16;
  if (this->_internal_light_turn_on_behavior() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        16, this->_internal_light_turn_on_behavior(), target);
  }

  // bool is_home_assistant_addon = 17;
  if (this->_internal_is_home_assistant_addon() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        17, this->_internal_is_home_assistant_addon(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MQTTManagerSettings)
  return target;
}

::size_t MQTTManagerSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MQTTManagerSettings)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string date_format = 3;
  if (!this->_internal_date_format().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_date_format());
  }

  // string outside_temp_sensor_provider = 4;
  if (!this->_internal_outside_temp_sensor_provider().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_outside_temp_sensor_provider());
  }

  // string outside_temp_sensor_entity_id = 5;
  if (!this->_internal_outside_temp_sensor_entity_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_outside_temp_sensor_entity_id());
  }

  // string weather_location_latitude = 6;
  if (!this->_internal_weather_location_latitude().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_weather_location_latitude());
  }

  // string weather_location_longitude = 7;
  if (!this->_internal_weather_location_longitude().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_weather_location_longitude());
  }

  // string manager_address = 15;
  if (!this->_internal_manager_address().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_manager_address());
  }

  // uint32 color_temp_min = 1;
  if (this->_internal_color_temp_min() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_color_temp_min());
  }

  // uint32 color_temp_max = 2;
  if (this->_internal_color_temp_max() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_color_temp_max());
  }

  // .wind_speed_format weather_wind_speed_format = 8;
  if (this->_internal_weather_wind_speed_format() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_weather_wind_speed_format());
  }

  // .precipitation_format weather_precipitation_unit = 9;
  if (this->_internal_weather_precipitation_unit() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_weather_precipitation_unit());
  }

  // int32 weather_update_interval_minutes = 10;
  if (this->_internal_weather_update_interval_minutes() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_weather_update_interval_minutes());
  }

  // .time_format clock_format = 11;
  if (this->_internal_clock_format() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_clock_format());
  }

  // .temperature_format temperature_unit = 12;
  if (this->_internal_temperature_unit() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_temperature_unit());
  }

  // int32 max_log_buffer_size = 13;
  if (this->_internal_max_log_buffer_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_max_log_buffer_size());
  }

  // int32 manager_port = 14;
  if (this->_internal_manager_port() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_manager_port());
  }

  // .MQTTManagerSettings.turn_on_behavior light_turn_on_behavior = 16;
  if (this->_internal_light_turn_on_behavior() != 0) {
    total_size += 2 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_light_turn_on_behavior());
  }

  // bool is_home_assistant_addon = 17;
  if (this->_internal_is_home_assistant_addon() != 0) {
    total_size += 3;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void MQTTManagerSettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MQTTManagerSettings*>(&to_msg);
  auto& from = static_cast<const MQTTManagerSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MQTTManagerSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_date_format().empty()) {
    _this->_internal_set_date_format(from._internal_date_format());
  }
  if (!from._internal_outside_temp_sensor_provider().empty()) {
    _this->_internal_set_outside_temp_sensor_provider(from._internal_outside_temp_sensor_provider());
  }
  if (!from._internal_outside_temp_sensor_entity_id().empty()) {
    _this->_internal_set_outside_temp_sensor_entity_id(from._internal_outside_temp_sensor_entity_id());
  }
  if (!from._internal_weather_location_latitude().empty()) {
    _this->_internal_set_weather_location_latitude(from._internal_weather_location_latitude());
  }
  if (!from._internal_weather_location_longitude().empty()) {
    _this->_internal_set_weather_location_longitude(from._internal_weather_location_longitude());
  }
  if (!from._internal_manager_address().empty()) {
    _this->_internal_set_manager_address(from._internal_manager_address());
  }
  if (from._internal_color_temp_min() != 0) {
    _this->_impl_.color_temp_min_ = from._impl_.color_temp_min_;
  }
  if (from._internal_color_temp_max() != 0) {
    _this->_impl_.color_temp_max_ = from._impl_.color_temp_max_;
  }
  if (from._internal_weather_wind_speed_format() != 0) {
    _this->_impl_.weather_wind_speed_format_ = from._impl_.weather_wind_speed_format_;
  }
  if (from._internal_weather_precipitation_unit() != 0) {
    _this->_impl_.weather_precipitation_unit_ = from._impl_.weather_precipitation_unit_;
  }
  if (from._internal_weather_update_interval_minutes() != 0) {
    _this->_impl_.weather_update_interval_minutes_ = from._impl_.weather_update_interval_minutes_;
  }
  if (from._internal_clock_format() != 0) {
    _this->_impl_.clock_format_ = from._impl_.clock_format_;
  }
  if (from._internal_temperature_unit() != 0) {
    _this->_impl_.temperature_unit_ = from._impl_.temperature_unit_;
  }
  if (from._internal_max_log_buffer_size() != 0) {
    _this->_impl_.max_log_buffer_size_ = from._impl_.max_log_buffer_size_;
  }
  if (from._internal_manager_port() != 0) {
    _this->_impl_.manager_port_ = from._impl_.manager_port_;
  }
  if (from._internal_light_turn_on_behavior() != 0) {
    _this->_impl_.light_turn_on_behavior_ = from._impl_.light_turn_on_behavior_;
  }
  if (from._internal_is_home_assistant_addon() != 0) {
    _this->_impl_.is_home_assistant_addon_ = from._impl_.is_home_assistant_addon_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MQTTManagerSettings::CopyFrom(const MQTTManagerSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MQTTManagerSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MQTTManagerSettings::InternalSwap(MQTTManagerSettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.date_format_, &other->_impl_.date_format_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.outside_temp_sensor_provider_, &other->_impl_.outside_temp_sensor_provider_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.outside_temp_sensor_entity_id_, &other->_impl_.outside_temp_sensor_entity_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.weather_location_latitude_, &other->_impl_.weather_location_latitude_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.weather_location_longitude_, &other->_impl_.weather_location_longitude_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.manager_address_, &other->_impl_.manager_address_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.is_home_assistant_addon_)
      + sizeof(MQTTManagerSettings::_impl_.is_home_assistant_addon_)
      - PROTOBUF_FIELD_OFFSET(MQTTManagerSettings, _impl_.color_temp_min_)>(
          reinterpret_cast<char*>(&_impl_.color_temp_min_),
          reinterpret_cast<char*>(&other->_impl_.color_temp_min_));
}

::google::protobuf::Metadata MQTTManagerSettings::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MultipleNSPanelsSettings::_Internal {
 public:
};

void MultipleNSPanelsSettings::clear_nspanels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nspanels_.Clear();
}
MultipleNSPanelsSettings::MultipleNSPanelsSettings(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MultipleNSPanelsSettings)
}
inline PROTOBUF_NDEBUG_INLINE MultipleNSPanelsSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MultipleNSPanelsSettings& from_msg)
      : nspanels_{visibility, arena, from.nspanels_},
        _cached_size_{0} {}

MultipleNSPanelsSettings::MultipleNSPanelsSettings(
    ::google::protobuf::Arena* arena,
    const MultipleNSPanelsSettings& from)
    : ::google::protobuf::Message(arena) {
  MultipleNSPanelsSettings* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:MultipleNSPanelsSettings)
}
inline PROTOBUF_NDEBUG_INLINE MultipleNSPanelsSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : nspanels_{visibility, arena},
        _cached_size_{0} {}

inline void MultipleNSPanelsSettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MultipleNSPanelsSettings::~MultipleNSPanelsSettings() {
  // @@protoc_insertion_point(destructor:MultipleNSPanelsSettings)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MultipleNSPanelsSettings::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
MultipleNSPanelsSettings::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(MultipleNSPanelsSettings, _impl_._cached_size_),
              false,
          },
          &MultipleNSPanelsSettings::MergeImpl,
          &MultipleNSPanelsSettings::kDescriptorMethods,
          &descriptor_table_protobuf_5fmqttmanager_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> MultipleNSPanelsSettings::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MultipleNSPanelsSettings_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MultipleNSPanelsSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .NSPanelSettings nspanels = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MultipleNSPanelsSettings, _impl_.nspanels_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .NSPanelSettings nspanels = 1;
    {PROTOBUF_FIELD_OFFSET(MultipleNSPanelsSettings, _impl_.nspanels_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NSPanelSettings>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MultipleNSPanelsSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:MultipleNSPanelsSettings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nspanels_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* MultipleNSPanelsSettings::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MultipleNSPanelsSettings)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .NSPanelSettings nspanels = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_nspanels_size());
       i < n; i++) {
    const auto& repfield = this->_internal_nspanels().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MultipleNSPanelsSettings)
  return target;
}

::size_t MultipleNSPanelsSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MultipleNSPanelsSettings)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .NSPanelSettings nspanels = 1;
  total_size += 1UL * this->_internal_nspanels_size();
  for (const auto& msg : this->_internal_nspanels()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void MultipleNSPanelsSettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MultipleNSPanelsSettings*>(&to_msg);
  auto& from = static_cast<const MultipleNSPanelsSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MultipleNSPanelsSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_nspanels()->MergeFrom(
      from._internal_nspanels());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MultipleNSPanelsSettings::CopyFrom(const MultipleNSPanelsSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MultipleNSPanelsSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MultipleNSPanelsSettings::InternalSwap(MultipleNSPanelsSettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.nspanels_.InternalSwap(&other->_impl_.nspanels_);
}

::google::protobuf::Metadata MultipleNSPanelsSettings::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_protobuf_5fmqttmanager_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

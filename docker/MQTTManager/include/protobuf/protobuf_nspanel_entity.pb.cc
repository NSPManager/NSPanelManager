// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protobuf_nspanel_entity.proto
// Protobuf C++ Version: 5.27.0

#include "protobuf_nspanel_entity.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr NSPanelEntityState_Thermostat_ThermostatOption::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : options_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        current_value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        icon_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NSPanelEntityState_Thermostat_ThermostatOption::NSPanelEntityState_Thermostat_ThermostatOption(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NSPanelEntityState_Thermostat_ThermostatOptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NSPanelEntityState_Thermostat_ThermostatOptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NSPanelEntityState_Thermostat_ThermostatOptionDefaultTypeInternal() {}
  union {
    NSPanelEntityState_Thermostat_ThermostatOption _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NSPanelEntityState_Thermostat_ThermostatOptionDefaultTypeInternal _NSPanelEntityState_Thermostat_ThermostatOption_default_instance_;

inline constexpr NSPanelEntityState_Light::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        light_id_{0},
        brightness_{0},
        color_temp_{0},
        hue_{0},
        saturation_{0},
        can_color_temp_{false},
        can_color_{false},
        current_light_mode_{static_cast< ::NSPanelEntityState_Light_LightMode >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NSPanelEntityState_Light::NSPanelEntityState_Light(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NSPanelEntityState_LightDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NSPanelEntityState_LightDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NSPanelEntityState_LightDefaultTypeInternal() {}
  union {
    NSPanelEntityState_Light _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NSPanelEntityState_LightDefaultTypeInternal _NSPanelEntityState_Light_default_instance_;

inline constexpr NSPanelEntityState_Thermostat::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : options_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        thermostat_id_{0},
        current_temperature_{0},
        step_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NSPanelEntityState_Thermostat::NSPanelEntityState_Thermostat(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NSPanelEntityState_ThermostatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NSPanelEntityState_ThermostatDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NSPanelEntityState_ThermostatDefaultTypeInternal() {}
  union {
    NSPanelEntityState_Thermostat _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NSPanelEntityState_ThermostatDefaultTypeInternal _NSPanelEntityState_Thermostat_default_instance_;

inline constexpr NSPanelEntityState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entity_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR NSPanelEntityState::NSPanelEntityState(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NSPanelEntityStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NSPanelEntityStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NSPanelEntityStateDefaultTypeInternal() {}
  union {
    NSPanelEntityState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NSPanelEntityStateDefaultTypeInternal _NSPanelEntityState_default_instance_;
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_protobuf_5fnspanel_5fentity_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protobuf_5fnspanel_5fentity_2eproto = nullptr;
const ::uint32_t
    TableStruct_protobuf_5fnspanel_5fentity_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState_Light, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState_Light, _impl_.light_id_),
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState_Light, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState_Light, _impl_.brightness_),
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState_Light, _impl_.color_temp_),
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState_Light, _impl_.hue_),
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState_Light, _impl_.saturation_),
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState_Light, _impl_.can_color_temp_),
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState_Light, _impl_.can_color_),
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState_Light, _impl_.current_light_mode_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState_Thermostat_ThermostatOption, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState_Thermostat_ThermostatOption, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState_Thermostat_ThermostatOption, _impl_.current_value_),
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState_Thermostat_ThermostatOption, _impl_.options_),
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState_Thermostat_ThermostatOption, _impl_.icon_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState_Thermostat, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState_Thermostat, _impl_.thermostat_id_),
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState_Thermostat, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState_Thermostat, _impl_.current_temperature_),
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState_Thermostat, _impl_.step_size_),
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState_Thermostat, _impl_.options_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::NSPanelEntityState, _impl_.entity_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::NSPanelEntityState_Light)},
        {17, -1, -1, sizeof(::NSPanelEntityState_Thermostat_ThermostatOption)},
        {29, -1, -1, sizeof(::NSPanelEntityState_Thermostat)},
        {42, -1, -1, sizeof(::NSPanelEntityState)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_NSPanelEntityState_Light_default_instance_._instance,
    &::_NSPanelEntityState_Thermostat_ThermostatOption_default_instance_._instance,
    &::_NSPanelEntityState_Thermostat_default_instance_._instance,
    &::_NSPanelEntityState_default_instance_._instance,
};
const char descriptor_table_protodef_protobuf_5fnspanel_5fentity_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\035protobuf_nspanel_entity.proto\"\203\005\n\022NSPa"
    "nelEntityState\022*\n\005light\030\001 \001(\0132\031.NSPanelE"
    "ntityState.LightH\000\0224\n\nthermostat\030\002 \001(\0132\036"
    ".NSPanelEntityState.ThermostatH\000\032\202\002\n\005Lig"
    "ht\022\020\n\010light_id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\022\n\nbr"
    "ightness\030\003 \001(\005\022\022\n\ncolor_temp\030\004 \001(\005\022\013\n\003hu"
    "e\030\005 \001(\005\022\022\n\nsaturation\030\006 \001(\005\022\026\n\016can_color"
    "_temp\030\007 \001(\010\022\021\n\tcan_color\030\010 \001(\010\022\?\n\022curren"
    "t_light_mode\030\t \001(\0162#.NSPanelEntityState."
    "Light.LightMode\"$\n\tLightMode\022\016\n\nCOLOR_TE"
    "MP\020\000\022\007\n\003RGB\020\001\032\373\001\n\nThermostat\022\025\n\rthermost"
    "at_id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\033\n\023current_tem"
    "perature\030\003 \001(\002\022\021\n\tstep_size\030\004 \001(\002\022@\n\007opt"
    "ions\030\005 \003(\0132/.NSPanelEntityState.Thermost"
    "at.ThermostatOption\032V\n\020ThermostatOption\022"
    "\014\n\004name\030\001 \001(\t\022\025\n\rcurrent_value\030\002 \001(\t\022\017\n\007"
    "options\030\003 \003(\t\022\014\n\004icon\030\004 \001(\tB\010\n\006entityb\006p"
    "roto3"
};
static ::absl::once_flag descriptor_table_protobuf_5fnspanel_5fentity_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_protobuf_5fnspanel_5fentity_2eproto = {
    false,
    false,
    685,
    descriptor_table_protodef_protobuf_5fnspanel_5fentity_2eproto,
    "protobuf_nspanel_entity.proto",
    &descriptor_table_protobuf_5fnspanel_5fentity_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_protobuf_5fnspanel_5fentity_2eproto::offsets,
    file_level_enum_descriptors_protobuf_5fnspanel_5fentity_2eproto,
    file_level_service_descriptors_protobuf_5fnspanel_5fentity_2eproto,
};
const ::google::protobuf::EnumDescriptor* NSPanelEntityState_Light_LightMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protobuf_5fnspanel_5fentity_2eproto);
  return file_level_enum_descriptors_protobuf_5fnspanel_5fentity_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t NSPanelEntityState_Light_LightMode_internal_data_[] = {
    131072u, 0u, };
bool NSPanelEntityState_Light_LightMode_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr NSPanelEntityState_Light_LightMode NSPanelEntityState_Light::COLOR_TEMP;
constexpr NSPanelEntityState_Light_LightMode NSPanelEntityState_Light::RGB;
constexpr NSPanelEntityState_Light_LightMode NSPanelEntityState_Light::LightMode_MIN;
constexpr NSPanelEntityState_Light_LightMode NSPanelEntityState_Light::LightMode_MAX;
constexpr int NSPanelEntityState_Light::LightMode_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class NSPanelEntityState_Light::_Internal {
 public:
};

NSPanelEntityState_Light::NSPanelEntityState_Light(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NSPanelEntityState.Light)
}
inline PROTOBUF_NDEBUG_INLINE NSPanelEntityState_Light::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::NSPanelEntityState_Light& from_msg)
      : name_(arena, from.name_),
        _cached_size_{0} {}

NSPanelEntityState_Light::NSPanelEntityState_Light(
    ::google::protobuf::Arena* arena,
    const NSPanelEntityState_Light& from)
    : ::google::protobuf::Message(arena) {
  NSPanelEntityState_Light* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, light_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, light_id_),
           offsetof(Impl_, current_light_mode_) -
               offsetof(Impl_, light_id_) +
               sizeof(Impl_::current_light_mode_));

  // @@protoc_insertion_point(copy_constructor:NSPanelEntityState.Light)
}
inline PROTOBUF_NDEBUG_INLINE NSPanelEntityState_Light::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void NSPanelEntityState_Light::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, light_id_),
           0,
           offsetof(Impl_, current_light_mode_) -
               offsetof(Impl_, light_id_) +
               sizeof(Impl_::current_light_mode_));
}
NSPanelEntityState_Light::~NSPanelEntityState_Light() {
  // @@protoc_insertion_point(destructor:NSPanelEntityState.Light)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NSPanelEntityState_Light::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NSPanelEntityState_Light::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Light, _impl_._cached_size_),
              false,
          },
          &NSPanelEntityState_Light::MergeImpl,
          &NSPanelEntityState_Light::kDescriptorMethods,
          &descriptor_table_protobuf_5fnspanel_5fentity_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 45, 2> NSPanelEntityState_Light::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NSPanelEntityState_Light_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NSPanelEntityState_Light>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 light_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NSPanelEntityState_Light, _impl_.light_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Light, _impl_.light_id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Light, _impl_.name_)}},
    // int32 brightness = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NSPanelEntityState_Light, _impl_.brightness_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Light, _impl_.brightness_)}},
    // int32 color_temp = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NSPanelEntityState_Light, _impl_.color_temp_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Light, _impl_.color_temp_)}},
    // int32 hue = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NSPanelEntityState_Light, _impl_.hue_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Light, _impl_.hue_)}},
    // int32 saturation = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NSPanelEntityState_Light, _impl_.saturation_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Light, _impl_.saturation_)}},
    // bool can_color_temp = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NSPanelEntityState_Light, _impl_.can_color_temp_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Light, _impl_.can_color_temp_)}},
    // bool can_color = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NSPanelEntityState_Light, _impl_.can_color_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Light, _impl_.can_color_)}},
    // .NSPanelEntityState.Light.LightMode current_light_mode = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NSPanelEntityState_Light, _impl_.current_light_mode_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Light, _impl_.current_light_mode_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 light_id = 1;
    {PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Light, _impl_.light_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Light, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 brightness = 3;
    {PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Light, _impl_.brightness_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 color_temp = 4;
    {PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Light, _impl_.color_temp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 hue = 5;
    {PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Light, _impl_.hue_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 saturation = 6;
    {PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Light, _impl_.saturation_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool can_color_temp = 7;
    {PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Light, _impl_.can_color_temp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool can_color = 8;
    {PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Light, _impl_.can_color_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .NSPanelEntityState.Light.LightMode current_light_mode = 9;
    {PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Light, _impl_.current_light_mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\30\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "NSPanelEntityState.Light"
    "name"
  }},
};

PROTOBUF_NOINLINE void NSPanelEntityState_Light::Clear() {
// @@protoc_insertion_point(message_clear_start:NSPanelEntityState.Light)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.light_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.current_light_mode_) -
      reinterpret_cast<char*>(&_impl_.light_id_)) + sizeof(_impl_.current_light_mode_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* NSPanelEntityState_Light::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NSPanelEntityState.Light)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 light_id = 1;
  if (this->_internal_light_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_light_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "NSPanelEntityState.Light.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int32 brightness = 3;
  if (this->_internal_brightness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_brightness(), target);
  }

  // int32 color_temp = 4;
  if (this->_internal_color_temp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_color_temp(), target);
  }

  // int32 hue = 5;
  if (this->_internal_hue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_hue(), target);
  }

  // int32 saturation = 6;
  if (this->_internal_saturation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_saturation(), target);
  }

  // bool can_color_temp = 7;
  if (this->_internal_can_color_temp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this->_internal_can_color_temp(), target);
  }

  // bool can_color = 8;
  if (this->_internal_can_color() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        8, this->_internal_can_color(), target);
  }

  // .NSPanelEntityState.Light.LightMode current_light_mode = 9;
  if (this->_internal_current_light_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        9, this->_internal_current_light_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NSPanelEntityState.Light)
  return target;
}

::size_t NSPanelEntityState_Light::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NSPanelEntityState.Light)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // int32 light_id = 1;
  if (this->_internal_light_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_light_id());
  }

  // int32 brightness = 3;
  if (this->_internal_brightness() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_brightness());
  }

  // int32 color_temp = 4;
  if (this->_internal_color_temp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_color_temp());
  }

  // int32 hue = 5;
  if (this->_internal_hue() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_hue());
  }

  // int32 saturation = 6;
  if (this->_internal_saturation() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_saturation());
  }

  // bool can_color_temp = 7;
  if (this->_internal_can_color_temp() != 0) {
    total_size += 2;
  }

  // bool can_color = 8;
  if (this->_internal_can_color() != 0) {
    total_size += 2;
  }

  // .NSPanelEntityState.Light.LightMode current_light_mode = 9;
  if (this->_internal_current_light_mode() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_current_light_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NSPanelEntityState_Light::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NSPanelEntityState_Light*>(&to_msg);
  auto& from = static_cast<const NSPanelEntityState_Light&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NSPanelEntityState.Light)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_light_id() != 0) {
    _this->_impl_.light_id_ = from._impl_.light_id_;
  }
  if (from._internal_brightness() != 0) {
    _this->_impl_.brightness_ = from._impl_.brightness_;
  }
  if (from._internal_color_temp() != 0) {
    _this->_impl_.color_temp_ = from._impl_.color_temp_;
  }
  if (from._internal_hue() != 0) {
    _this->_impl_.hue_ = from._impl_.hue_;
  }
  if (from._internal_saturation() != 0) {
    _this->_impl_.saturation_ = from._impl_.saturation_;
  }
  if (from._internal_can_color_temp() != 0) {
    _this->_impl_.can_color_temp_ = from._impl_.can_color_temp_;
  }
  if (from._internal_can_color() != 0) {
    _this->_impl_.can_color_ = from._impl_.can_color_;
  }
  if (from._internal_current_light_mode() != 0) {
    _this->_impl_.current_light_mode_ = from._impl_.current_light_mode_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NSPanelEntityState_Light::CopyFrom(const NSPanelEntityState_Light& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NSPanelEntityState.Light)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NSPanelEntityState_Light::InternalSwap(NSPanelEntityState_Light* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Light, _impl_.current_light_mode_)
      + sizeof(NSPanelEntityState_Light::_impl_.current_light_mode_)
      - PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Light, _impl_.light_id_)>(
          reinterpret_cast<char*>(&_impl_.light_id_),
          reinterpret_cast<char*>(&other->_impl_.light_id_));
}

::google::protobuf::Metadata NSPanelEntityState_Light::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NSPanelEntityState_Thermostat_ThermostatOption::_Internal {
 public:
};

NSPanelEntityState_Thermostat_ThermostatOption::NSPanelEntityState_Thermostat_ThermostatOption(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NSPanelEntityState.Thermostat.ThermostatOption)
}
inline PROTOBUF_NDEBUG_INLINE NSPanelEntityState_Thermostat_ThermostatOption::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::NSPanelEntityState_Thermostat_ThermostatOption& from_msg)
      : options_{visibility, arena, from.options_},
        name_(arena, from.name_),
        current_value_(arena, from.current_value_),
        icon_(arena, from.icon_),
        _cached_size_{0} {}

NSPanelEntityState_Thermostat_ThermostatOption::NSPanelEntityState_Thermostat_ThermostatOption(
    ::google::protobuf::Arena* arena,
    const NSPanelEntityState_Thermostat_ThermostatOption& from)
    : ::google::protobuf::Message(arena) {
  NSPanelEntityState_Thermostat_ThermostatOption* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:NSPanelEntityState.Thermostat.ThermostatOption)
}
inline PROTOBUF_NDEBUG_INLINE NSPanelEntityState_Thermostat_ThermostatOption::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : options_{visibility, arena},
        name_(arena),
        current_value_(arena),
        icon_(arena),
        _cached_size_{0} {}

inline void NSPanelEntityState_Thermostat_ThermostatOption::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NSPanelEntityState_Thermostat_ThermostatOption::~NSPanelEntityState_Thermostat_ThermostatOption() {
  // @@protoc_insertion_point(destructor:NSPanelEntityState.Thermostat.ThermostatOption)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NSPanelEntityState_Thermostat_ThermostatOption::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.current_value_.Destroy();
  _impl_.icon_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NSPanelEntityState_Thermostat_ThermostatOption::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat_ThermostatOption, _impl_._cached_size_),
              false,
          },
          &NSPanelEntityState_Thermostat_ThermostatOption::MergeImpl,
          &NSPanelEntityState_Thermostat_ThermostatOption::kDescriptorMethods,
          &descriptor_table_protobuf_5fnspanel_5fentity_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 83, 2> NSPanelEntityState_Thermostat_ThermostatOption::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NSPanelEntityState_Thermostat_ThermostatOption_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NSPanelEntityState_Thermostat_ThermostatOption>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string icon = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat_ThermostatOption, _impl_.icon_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat_ThermostatOption, _impl_.name_)}},
    // string current_value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat_ThermostatOption, _impl_.current_value_)}},
    // repeated string options = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat_ThermostatOption, _impl_.options_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat_ThermostatOption, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string current_value = 2;
    {PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat_ThermostatOption, _impl_.current_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string options = 3;
    {PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat_ThermostatOption, _impl_.options_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string icon = 4;
    {PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat_ThermostatOption, _impl_.icon_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\4\15\7\4\0\0\0"
    "NSPanelEntityState.Thermostat.ThermostatOption"
    "name"
    "current_value"
    "options"
    "icon"
  }},
};

PROTOBUF_NOINLINE void NSPanelEntityState_Thermostat_ThermostatOption::Clear() {
// @@protoc_insertion_point(message_clear_start:NSPanelEntityState.Thermostat.ThermostatOption)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.options_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.current_value_.ClearToEmpty();
  _impl_.icon_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* NSPanelEntityState_Thermostat_ThermostatOption::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NSPanelEntityState.Thermostat.ThermostatOption)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "NSPanelEntityState.Thermostat.ThermostatOption.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string current_value = 2;
  if (!this->_internal_current_value().empty()) {
    const std::string& _s = this->_internal_current_value();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "NSPanelEntityState.Thermostat.ThermostatOption.current_value");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated string options = 3;
  for (int i = 0, n = this->_internal_options_size(); i < n; ++i) {
    const auto& s = this->_internal_options().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "NSPanelEntityState.Thermostat.ThermostatOption.options");
    target = stream->WriteString(3, s, target);
  }

  // string icon = 4;
  if (!this->_internal_icon().empty()) {
    const std::string& _s = this->_internal_icon();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "NSPanelEntityState.Thermostat.ThermostatOption.icon");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NSPanelEntityState.Thermostat.ThermostatOption)
  return target;
}

::size_t NSPanelEntityState_Thermostat_ThermostatOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NSPanelEntityState.Thermostat.ThermostatOption)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated string options = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_options().size());
  for (int i = 0, n = _internal_options().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_options().Get(i));
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string current_value = 2;
  if (!this->_internal_current_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_current_value());
  }

  // string icon = 4;
  if (!this->_internal_icon().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_icon());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NSPanelEntityState_Thermostat_ThermostatOption::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NSPanelEntityState_Thermostat_ThermostatOption*>(&to_msg);
  auto& from = static_cast<const NSPanelEntityState_Thermostat_ThermostatOption&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NSPanelEntityState.Thermostat.ThermostatOption)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_options()->MergeFrom(from._internal_options());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_current_value().empty()) {
    _this->_internal_set_current_value(from._internal_current_value());
  }
  if (!from._internal_icon().empty()) {
    _this->_internal_set_icon(from._internal_icon());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NSPanelEntityState_Thermostat_ThermostatOption::CopyFrom(const NSPanelEntityState_Thermostat_ThermostatOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NSPanelEntityState.Thermostat.ThermostatOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NSPanelEntityState_Thermostat_ThermostatOption::InternalSwap(NSPanelEntityState_Thermostat_ThermostatOption* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.options_.InternalSwap(&other->_impl_.options_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.current_value_, &other->_impl_.current_value_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.icon_, &other->_impl_.icon_, arena);
}

::google::protobuf::Metadata NSPanelEntityState_Thermostat_ThermostatOption::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NSPanelEntityState_Thermostat::_Internal {
 public:
};

NSPanelEntityState_Thermostat::NSPanelEntityState_Thermostat(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NSPanelEntityState.Thermostat)
}
inline PROTOBUF_NDEBUG_INLINE NSPanelEntityState_Thermostat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::NSPanelEntityState_Thermostat& from_msg)
      : options_{visibility, arena, from.options_},
        name_(arena, from.name_),
        _cached_size_{0} {}

NSPanelEntityState_Thermostat::NSPanelEntityState_Thermostat(
    ::google::protobuf::Arena* arena,
    const NSPanelEntityState_Thermostat& from)
    : ::google::protobuf::Message(arena) {
  NSPanelEntityState_Thermostat* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, thermostat_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, thermostat_id_),
           offsetof(Impl_, step_size_) -
               offsetof(Impl_, thermostat_id_) +
               sizeof(Impl_::step_size_));

  // @@protoc_insertion_point(copy_constructor:NSPanelEntityState.Thermostat)
}
inline PROTOBUF_NDEBUG_INLINE NSPanelEntityState_Thermostat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : options_{visibility, arena},
        name_(arena),
        _cached_size_{0} {}

inline void NSPanelEntityState_Thermostat::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, thermostat_id_),
           0,
           offsetof(Impl_, step_size_) -
               offsetof(Impl_, thermostat_id_) +
               sizeof(Impl_::step_size_));
}
NSPanelEntityState_Thermostat::~NSPanelEntityState_Thermostat() {
  // @@protoc_insertion_point(destructor:NSPanelEntityState.Thermostat)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NSPanelEntityState_Thermostat::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NSPanelEntityState_Thermostat::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat, _impl_._cached_size_),
              false,
          },
          &NSPanelEntityState_Thermostat::MergeImpl,
          &NSPanelEntityState_Thermostat::kDescriptorMethods,
          &descriptor_table_protobuf_5fnspanel_5fentity_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 42, 2> NSPanelEntityState_Thermostat::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NSPanelEntityState_Thermostat_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NSPanelEntityState_Thermostat>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 thermostat_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NSPanelEntityState_Thermostat, _impl_.thermostat_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat, _impl_.thermostat_id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat, _impl_.name_)}},
    // float current_temperature = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat, _impl_.current_temperature_)}},
    // float step_size = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat, _impl_.step_size_)}},
    // repeated .NSPanelEntityState.Thermostat.ThermostatOption options = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat, _impl_.options_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 thermostat_id = 1;
    {PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat, _impl_.thermostat_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float current_temperature = 3;
    {PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat, _impl_.current_temperature_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float step_size = 4;
    {PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat, _impl_.step_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // repeated .NSPanelEntityState.Thermostat.ThermostatOption options = 5;
    {PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat, _impl_.options_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NSPanelEntityState_Thermostat_ThermostatOption>()},
  }}, {{
    "\35\0\4\0\0\0\0\0"
    "NSPanelEntityState.Thermostat"
    "name"
  }},
};

PROTOBUF_NOINLINE void NSPanelEntityState_Thermostat::Clear() {
// @@protoc_insertion_point(message_clear_start:NSPanelEntityState.Thermostat)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.options_.Clear();
  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.thermostat_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.step_size_) -
      reinterpret_cast<char*>(&_impl_.thermostat_id_)) + sizeof(_impl_.step_size_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* NSPanelEntityState_Thermostat::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NSPanelEntityState.Thermostat)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 thermostat_id = 1;
  if (this->_internal_thermostat_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_thermostat_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "NSPanelEntityState.Thermostat.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // float current_temperature = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_current_temperature = this->_internal_current_temperature();
  ::uint32_t raw_current_temperature;
  memcpy(&raw_current_temperature, &tmp_current_temperature, sizeof(tmp_current_temperature));
  if (raw_current_temperature != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_current_temperature(), target);
  }

  // float step_size = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_step_size = this->_internal_step_size();
  ::uint32_t raw_step_size;
  memcpy(&raw_step_size, &tmp_step_size, sizeof(tmp_step_size));
  if (raw_step_size != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_step_size(), target);
  }

  // repeated .NSPanelEntityState.Thermostat.ThermostatOption options = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_options_size());
       i < n; i++) {
    const auto& repfield = this->_internal_options().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NSPanelEntityState.Thermostat)
  return target;
}

::size_t NSPanelEntityState_Thermostat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NSPanelEntityState.Thermostat)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .NSPanelEntityState.Thermostat.ThermostatOption options = 5;
  total_size += 1UL * this->_internal_options_size();
  for (const auto& msg : this->_internal_options()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // int32 thermostat_id = 1;
  if (this->_internal_thermostat_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_thermostat_id());
  }

  // float current_temperature = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_current_temperature = this->_internal_current_temperature();
  ::uint32_t raw_current_temperature;
  memcpy(&raw_current_temperature, &tmp_current_temperature, sizeof(tmp_current_temperature));
  if (raw_current_temperature != 0) {
    total_size += 5;
  }

  // float step_size = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_step_size = this->_internal_step_size();
  ::uint32_t raw_step_size;
  memcpy(&raw_step_size, &tmp_step_size, sizeof(tmp_step_size));
  if (raw_step_size != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NSPanelEntityState_Thermostat::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NSPanelEntityState_Thermostat*>(&to_msg);
  auto& from = static_cast<const NSPanelEntityState_Thermostat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NSPanelEntityState.Thermostat)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_options()->MergeFrom(
      from._internal_options());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_thermostat_id() != 0) {
    _this->_impl_.thermostat_id_ = from._impl_.thermostat_id_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_current_temperature = from._internal_current_temperature();
  ::uint32_t raw_current_temperature;
  memcpy(&raw_current_temperature, &tmp_current_temperature, sizeof(tmp_current_temperature));
  if (raw_current_temperature != 0) {
    _this->_impl_.current_temperature_ = from._impl_.current_temperature_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_step_size = from._internal_step_size();
  ::uint32_t raw_step_size;
  memcpy(&raw_step_size, &tmp_step_size, sizeof(tmp_step_size));
  if (raw_step_size != 0) {
    _this->_impl_.step_size_ = from._impl_.step_size_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NSPanelEntityState_Thermostat::CopyFrom(const NSPanelEntityState_Thermostat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NSPanelEntityState.Thermostat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NSPanelEntityState_Thermostat::InternalSwap(NSPanelEntityState_Thermostat* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.options_.InternalSwap(&other->_impl_.options_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat, _impl_.step_size_)
      + sizeof(NSPanelEntityState_Thermostat::_impl_.step_size_)
      - PROTOBUF_FIELD_OFFSET(NSPanelEntityState_Thermostat, _impl_.thermostat_id_)>(
          reinterpret_cast<char*>(&_impl_.thermostat_id_),
          reinterpret_cast<char*>(&other->_impl_.thermostat_id_));
}

::google::protobuf::Metadata NSPanelEntityState_Thermostat::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NSPanelEntityState::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::NSPanelEntityState, _impl_._oneof_case_);
};

void NSPanelEntityState::set_allocated_light(::NSPanelEntityState_Light* light) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_entity();
  if (light) {
    ::google::protobuf::Arena* submessage_arena = light->GetArena();
    if (message_arena != submessage_arena) {
      light = ::google::protobuf::internal::GetOwnedMessage(message_arena, light, submessage_arena);
    }
    set_has_light();
    _impl_.entity_.light_ = light;
  }
  // @@protoc_insertion_point(field_set_allocated:NSPanelEntityState.light)
}
void NSPanelEntityState::set_allocated_thermostat(::NSPanelEntityState_Thermostat* thermostat) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_entity();
  if (thermostat) {
    ::google::protobuf::Arena* submessage_arena = thermostat->GetArena();
    if (message_arena != submessage_arena) {
      thermostat = ::google::protobuf::internal::GetOwnedMessage(message_arena, thermostat, submessage_arena);
    }
    set_has_thermostat();
    _impl_.entity_.thermostat_ = thermostat;
  }
  // @@protoc_insertion_point(field_set_allocated:NSPanelEntityState.thermostat)
}
NSPanelEntityState::NSPanelEntityState(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NSPanelEntityState)
}
inline PROTOBUF_NDEBUG_INLINE NSPanelEntityState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::NSPanelEntityState& from_msg)
      : entity_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

NSPanelEntityState::NSPanelEntityState(
    ::google::protobuf::Arena* arena,
    const NSPanelEntityState& from)
    : ::google::protobuf::Message(arena) {
  NSPanelEntityState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (entity_case()) {
    case ENTITY_NOT_SET:
      break;
      case kLight:
        _impl_.entity_.light_ = ::google::protobuf::Message::CopyConstruct<::NSPanelEntityState_Light>(arena, *from._impl_.entity_.light_);
        break;
      case kThermostat:
        _impl_.entity_.thermostat_ = ::google::protobuf::Message::CopyConstruct<::NSPanelEntityState_Thermostat>(arena, *from._impl_.entity_.thermostat_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:NSPanelEntityState)
}
inline PROTOBUF_NDEBUG_INLINE NSPanelEntityState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : entity_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void NSPanelEntityState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NSPanelEntityState::~NSPanelEntityState() {
  // @@protoc_insertion_point(destructor:NSPanelEntityState)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NSPanelEntityState::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_entity()) {
    clear_entity();
  }
  _impl_.~Impl_();
}

void NSPanelEntityState::clear_entity() {
// @@protoc_insertion_point(one_of_clear_start:NSPanelEntityState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (entity_case()) {
    case kLight: {
      if (GetArena() == nullptr) {
        delete _impl_.entity_.light_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.entity_.light_);
      }
      break;
    }
    case kThermostat: {
      if (GetArena() == nullptr) {
        delete _impl_.entity_.thermostat_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.entity_.thermostat_);
      }
      break;
    }
    case ENTITY_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ENTITY_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
NSPanelEntityState::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(NSPanelEntityState, _impl_._cached_size_),
              false,
          },
          &NSPanelEntityState::MergeImpl,
          &NSPanelEntityState::kDescriptorMethods,
          &descriptor_table_protobuf_5fnspanel_5fentity_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> NSPanelEntityState::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NSPanelEntityState_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NSPanelEntityState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .NSPanelEntityState.Light light = 1;
    {PROTOBUF_FIELD_OFFSET(NSPanelEntityState, _impl_.entity_.light_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .NSPanelEntityState.Thermostat thermostat = 2;
    {PROTOBUF_FIELD_OFFSET(NSPanelEntityState, _impl_.entity_.thermostat_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NSPanelEntityState_Light>()},
    {::_pbi::TcParser::GetTable<::NSPanelEntityState_Thermostat>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void NSPanelEntityState::Clear() {
// @@protoc_insertion_point(message_clear_start:NSPanelEntityState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_entity();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* NSPanelEntityState::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NSPanelEntityState)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (entity_case()) {
    case kLight: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *_impl_.entity_.light_, _impl_.entity_.light_->GetCachedSize(), target, stream);
      break;
    }
    case kThermostat: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.entity_.thermostat_, _impl_.entity_.thermostat_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NSPanelEntityState)
  return target;
}

::size_t NSPanelEntityState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NSPanelEntityState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (entity_case()) {
    // .NSPanelEntityState.Light light = 1;
    case kLight: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.entity_.light_);
      break;
    }
    // .NSPanelEntityState.Thermostat thermostat = 2;
    case kThermostat: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.entity_.thermostat_);
      break;
    }
    case ENTITY_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NSPanelEntityState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NSPanelEntityState*>(&to_msg);
  auto& from = static_cast<const NSPanelEntityState&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:NSPanelEntityState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_entity();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kLight: {
        if (oneof_needs_init) {
          _this->_impl_.entity_.light_ =
              ::google::protobuf::Message::CopyConstruct<::NSPanelEntityState_Light>(arena, *from._impl_.entity_.light_);
        } else {
          _this->_impl_.entity_.light_->MergeFrom(from._internal_light());
        }
        break;
      }
      case kThermostat: {
        if (oneof_needs_init) {
          _this->_impl_.entity_.thermostat_ =
              ::google::protobuf::Message::CopyConstruct<::NSPanelEntityState_Thermostat>(arena, *from._impl_.entity_.thermostat_);
        } else {
          _this->_impl_.entity_.thermostat_->MergeFrom(from._internal_thermostat());
        }
        break;
      }
      case ENTITY_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NSPanelEntityState::CopyFrom(const NSPanelEntityState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NSPanelEntityState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NSPanelEntityState::InternalSwap(NSPanelEntityState* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.entity_, other->_impl_.entity_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata NSPanelEntityState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_protobuf_5fnspanel_5fentity_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

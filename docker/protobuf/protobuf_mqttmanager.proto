syntax = "proto3";
import "protobuf_formats.proto";

// Protobufs defined in this .proto file are used to communicate with the MQTTManager


message NSPanelSettings {
    optional int32 id = 1;
    string mac_address = 2;
    string name = 3;
    int32 home = 4;

    enum NSPanelDefaultPage {
        MAIN_PAGE = 0;
        SCENES_PAGE = 1;
        ROOM_PAGE = 2;
    }
    NSPanelDefaultPage default_page = 5;

    int32 raise_to_100_light_level = 6;
    int32 color_temp_min = 7;
    int32 color_temp_max = 8;
    bool reverse_color_temp = 9;
    int32 min_button_push_time = 10;
    int32 button_long_press_time = 11;
    int32 special_mode_trigger_time = 12;
    int32 special_mode_release_time = 13;
    int32 mqtt_ignore_time = 14;
    int32 screen_dim_level = 15;
    int32 screensaver_dim_level = 16;
    int32 screensaver_activation_timeout = 17;

    // Make sure this is updated together with protobuf_nspanel
    enum NSPanelScreensaverMode {
        WEATHER_WITH_BACKGROUND = 0;
        WEATHER_WITHOUT_BACKGROUND = 1;
        DATETIME_WITH_BACKGROUND = 3;
        DATETIME_WITHOUT_BACKGROUND = 4;
        NO_SCREENSAVER = 5;
    }
    NSPanelScreensaverMode screensaver_mode = 18;

    time_format clock_format = 19;
    temperature_format temperature_unit = 20;
    bool is_us_panel = 21;
    bool lock_to_default_room = 22;
    bool reverse_relays = 23;
    bool relay1_default_mode = 24;
    bool relay2_default_mode = 25;
    int32 temperature_calibration = 26;

    enum NSPanelButtonMode {
        DIRECT_MODE = 0;
        DETACHED_MODE = 1;
        CUSTOM_MQTT = 2;
        FOLLOW_MODE = 3;
    }
    NSPanelButtonMode button1_mode = 27;
    NSPanelButtonMode button2_mode = 28;

    optional string button1_mqtt_topic = 29;
    optional string button2_mqtt_topic = 30;
    optional string button1_mqtt_payload = 31;
    optional string button2_mqtt_payload = 32;
    optional int32 button1_detached_light_id = 33;
    optional int32 button2_detached_light_id = 34;

    bool denied = 45;
    bool accepted = 46;
    repeated int32 rooms = 47;
    repeated int32 scenes = 48;
    string ip_address = 49;

    enum RelayRegisterType {
        SWITCH = 0;
        LIGHT = 1;
    }
    RelayRegisterType relay1_register_type = 50;
    RelayRegisterType relay2_register_type = 51;

    int32 default_room = 52;
}

message MQTTManagerPrivateSettings {
    string home_assistant_address = 1;
    string home_assistant_token = 2;
    string openhab_address = 3;
    string openhab_token = 4;
    string mqtt_server = 5;
    int32 mqtt_server_port = 6;
    string mqtt_username = 7;
    string mqtt_password = 8;
}

message MQTTManagerSettings {
    uint32 color_temp_min = 1;
    uint32 color_temp_max = 2;
    string date_format = 3;
    string outside_temp_sensor_provider = 4;
    string outside_temp_sensor_entity_id = 5;
    string weather_location_latitude = 6;
    string weather_location_longitude = 7;
    wind_speed_format weather_wind_speed_format = 8;
    precipitation_format weather_precipitation_unit = 9;
    int32 weather_update_interval_minutes = 10;
    time_format clock_format = 11;
    temperature_format temperature_unit = 12;
    int32 max_log_buffer_size = 13;
    int32 manager_port = 14;
    string manager_address = 15;

    enum turn_on_behavior {
        color_temperature = 0;
        restore = 1;
    }
    turn_on_behavior light_turn_on_behavior = 16;
    bool is_home_assistant_addon = 17;
}


message MultipleNSPanelsSettings {
    repeated NSPanelSettings nspanels = 1;
}
